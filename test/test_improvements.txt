Testes:
    - Implementar unittests para as funções cujos resultados podem ser checados sem utilização
    de nenhuma das APIs
    - Testar anonimização de um único data source:
        - Testar a anonimização de todos os campos -> fornecendo categoria vazia
        - Testar a anonimização de campos com strings pequenas ou nulas
        - Verificar que a anonimização não é aplicada para registros pequenos (CTS)
        - Verificar que linhas que não possuem o unique_id ou primary key não são anonimizadas
        - Verificar, quando aplicável, que a unique_id também é anonimizada ao final da operação
    - Testar anonimização em vários data sources:
        - Mesmos cenários de teste listados anteriormente
    - Testar anonimização de múltiplos minimization requests
    - Testar minimization request onde há muitos objetos em vários data sources
    - Estudar a performance da anonimização medindo a quantidade de linhas tokenizadas e o tempo total levado
    - Se necessário, melhorar a performance agrupando todos os resultados de sar_reports e depois
    agrupando por data source. Ao final, fazer as requisições de finalização para o BigID


Melhorias:
    - Estudar o gerenciamento de senhas e encryption_key, keystore, .env, etc.
    - Verificar se o Flask é capaz de lidar com as requisições. Caso haja problemas, realizar
    a mudança para Django
    - Implementar os conectores de outros bancos relacionais comuns (PostgreSQL, SQL Server, etc.)